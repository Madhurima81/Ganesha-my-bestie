// App.jsx - Simple test version for original PondScene
import React, { useState, useEffect } from 'react';
import './App.css';
import PondScene from './zones/symbol-mountain/scenes/pond/PondScene'; // Original version
import GameStateManager from './lib/services/GameStateManager';

function App() {
  const [initialized, setInitialized] = useState(false);

  // Initialize a test profile when the app starts
  useEffect(() => {
    console.log('Setting up test environment');
    
    // Create a test profile if one doesn't exist
    if (!GameStateManager.getCurrentProfile()) {
      GameStateManager.createProfile({
        name: 'Test User',
        avatar: '🐘',
        color: '#6495ED'
      });
    }
    
    // Set body styling needed for PondScene
    document.body.style.margin = '0';
    document.body.style.padding = '0';
    document.body.style.overflow = 'hidden';
    
    const root = document.getElementById('root');
    if (root) {
      root.style.height = '100vh';
      root.style.width = '100vw';
      root.style.margin = '0';
      root.style.padding = '0';
    }
    
    setInitialized(true);
    
    // Cleanup function
    return () => {
      document.body.style.cssText = '';
      if (root) root.style.cssText = '';
    };
  }, []);

  // Simple handlers
  const handleComplete = (sceneId, result) => {
    console.log('Scene completed:', sceneId, result);
    alert(`Scene completed with ${result.stars} stars!`);
  };

  const handleNavigate = (destination) => {
    console.log('Navigate to:', destination);
    alert(`Navigation requested to: ${destination}`);
  };
  
  const handleSceneSelect = (sceneId) => {
    console.log('Scene selected:', sceneId);
  };

  if (!initialized) {
    return <div>Loading test environment...</div>;
  }

  // Render the PondScene directly
  return (
    <div style={{height: '100vh', width: '100vw', position: 'relative'}}>
      {/* Simple test controls */}
      <div style={{
        position: 'fixed', 
        top: '10px', 
        right: '10px', 
        zIndex: 9999,
        background: 'rgba(0,0,0,0.7)',
        color: 'white',
        padding: '10px',
        borderRadius: '5px'
      }}>
        <h4 style={{margin: '0 0 10px 0'}}>Test Controls</h4>
        <button 
          onClick={() => window.location.reload()}
          style={{marginRight: '5px'}}
        >
          Reset Scene
        </button>
        <button 
          onClick={() => {
            localStorage.clear();
            window.location.reload();
          }}
        >
          Clear Storage
        </button>
      </div>
      
      {/* The original PondScene */}
      <PondScene
        onComplete={handleComplete}
        onNavigate={handleNavigate}
        onSceneSelect={handleSceneSelect}
        zoneId="symbol-mountain"
        sceneId="pond"
        isActive={true}
      />
    </div>
  );
}

export default App;